// Generated by CoffeeScript 1.3.1
(function() {
  var Horse, root,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },
    __slice = [].slice;

  Horse = (function() {
    var feedTypes, genders;

    Horse.name = 'Horse';

    genders = ['mare', 'stallion', 'gelding'];

    feedTypes = ['hard', 'normal', 'easy'];

    function Horse() {
      this.weight = null;
      this.gender = null;
      this.feedType = 'normal';
      this.workload = {
        daysPerWeek: 0,
        walk: 0,
        trot: 0
      };
    }

    Horse.prototype.setWeight = function(weight) {
      var convertedWeight;
      convertedWeight = Number(weight);
      if (isNaN(convertedWeight)) {
        throw "" + weight + " is not a valid number";
      } else if (convertedWeight < 0) {
        throw "" + weight + " is not a valid weight";
      }
      return this.weight = convertedWeight;
    };

    Horse.prototype.setGender = function(gender) {
      if (__indexOf.call(genders, gender) < 0) {
        throw "" + gender + " is not a valid horse gender";
      }
      return this.gender = gender;
    };

    Horse.prototype.setFeedType = function(feedType) {
      if (__indexOf.call(feedTypes, feedType) < 0) {
        throw "" + feedType + " is not a valid horse feed type";
      }
      return this.feedType = feedType;
    };

    Horse.prototype.setWorkload = function() {
      var args, i, _i, _ref, _results;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      _results = [];
      for (i = _i = 0, _ref = args.length; _i < _ref; i = _i += 2) {
        if ((isNaN(args[i + 1])) || args[i + 1] < 0) {
          throw " " + args[i + 1] + " is not a valid number";
        } else {
          _results.push(this.workload[args[i]] = args[i + 1]);
        }
      }
      return _results;
    };

    return Horse;

  })();

  root = typeof exports !== "undefined" && exports !== null ? exports : window;

  root.Horse = Horse;

}).call(this);
